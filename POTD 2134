2134.  Minimum Swaps to Group All 1's Together 11

class Solution {
    public int minSwaps(int[] nums) {
        int n = nums.length;

        // Counting the number of 1's to determine the window size.
        int window = 0;
        for(int i = 0;i<n;i++)
            if(nums[i] == 1)    window++;

        // Determining the wwindow having the maximum number of 1's and returning the min number of zero's in that window.
        int min = Integer.MAX_VALUE;
        int ones = 0;
        for(int i = 0, j = 0;i<2*n;i++){
            int ti = i%n;
            int tj = j%n;
            if((i-j)+1 > window){
                if(nums[tj] == 1)   ones--;
                j++;
            }
            if(nums[ti] == 1)   ones++;
            min = Math.min(min, window-ones);
        }
        return min;
    }
}
