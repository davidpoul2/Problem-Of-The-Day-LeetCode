2685.  Count the Number of Complete Components.

class Solution {


    private void dfs(int node, int[] count, ArrayList<Integer>[] adj, boolean vis[]){

        count[0]++;
        vis[node] = true;

        for(int neigh : adj[node]){
            count[1]++;
            if(!vis[neigh]){
                dfs(neigh, count, adj, vis);
            }
        }
    }

    public int countCompleteComponents(int n, int[][] edges) {
        
        // Creating Adjacency List.
        ArrayList<Integer>[] adj = new ArrayList[n];

        for(int i = 0;i < n;i++)
            adj[i] = new ArrayList<Integer>();

        for(int edge[] : edges){
            adj[edge[0]].add(edge[1]);
            adj[edge[1]].add(edge[0]);
        }

        boolean vis[] = new boolean[n];

        int complete_components = 0;

        for(int i = 0;i < n;i++){
            
            if(!vis[i]){

                int[] count = {0, 0};

                dfs(i, count, adj, vis);
                int node = count[0];
                int edge = count[1];

                if(edge == (node*(node-1)))
                    complete_components++;
            }
        }

        return complete_components;
    }
}
