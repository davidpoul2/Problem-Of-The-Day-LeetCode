2416.  Sum of Prefix Scores of Strings.


// Using Tire Data Structure.
class PrefixSum{

    PrefixSum next[] = new PrefixSum[26];
    int count = 0;

}

class Solution {

    PrefixSum root  = new PrefixSum();

    // Inserting the word in the Tire DataStructure.
    public void insert(String word){
        PrefixSum node = root;
        for(char ch : word.toCharArray()){
            
            // If there is no prefix 
            if(node.next[ch-'a'] == null){
                node.next[ch-'a'] = new PrefixSum();
            }
            // Increment the count of the current prefix.
            node.next[ch-'a'].count++;
            node = node.next[ch - 'a'];
        }
    }

    public int sum(String word){

        PrefixSum node = root;
        int ans = 0;
        for(char ch : word.toCharArray()){
            ans += node.next[ch-'a'].count;
            node = node.next[ch - 'a'];
        }
        return ans;

    }

    public int[] sumPrefixScores(String[] words) {
        
        int n = words.length;

        for(String word : words){
            insert(word);
        }

        int[] prefixes = new int[n];
        for(int i = 0;i<n;i++){
            prefixes[i] = sum(words[i]);
        }

        return prefixes;

    }
}
