2684.  Maximum Number of Moves in a Grid.

class Solution {
    public int maxMoves(int[][] grid) {
        int n = grid.length,
            m = grid[0].length,
            moves = 0;

        int dp[][] = new int[n][m];
        for(int i = 0; i<n; i++){
            Arrays.fill(dp[i], -1);
        }

        for(int i = 0 ;i < n;i++){
            moves = Math.max(moves, findMoves(grid, i, 0, dp, n, m));
        }
        return moves;
    }

    public int findMoves(int grid[][], int row, int col, int[][] dp, int n, int m){

        if(dp[row][col] != -1)  return dp[row][col];
        int[] adj = {-1, 0, 1};
        int max = 0;
        for(int i = 0;i<3;i++){
            int adjRow = row + adj[i];
            int adjCol = col + 1;

            if(adjRow >= 0 && adjRow < n && adjCol < m && grid[row][col] < grid[adjRow][adjCol]){
                max = Math.max(max, findMoves(grid, adjRow, adjCol, dp, n, m)+1);
            }
        }
        return dp[row][col] = max;
    }
}
