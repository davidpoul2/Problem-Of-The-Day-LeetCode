567.  Permutation in String.

class Solution {
    public boolean checkInclusion(String s1, String s2) {
        
        int n = s1.length();
        int m = s2.length();

        if(n > m)   return false;

        int str1[] = new int[26];
        int str2[] = new int[26];
        for(int i = 0;i<n;i++){
            str1[s1.charAt(i) - 'a']++;
            str2[s2.charAt(i) - 'a']++;
        }  

        // boolean flag = false;
        // for(int i= 0;i<m-n+1;i++){
        //     int str2[] = new int[27];
        //     for(int j = i;j<i+n;j++){
        //         str2[s2.charAt(j) - 'a']++;
        //     }
        //     flag = (flag || isEqual(str1, str2));
        // }
        
        for(int i = 0;i < m-n;i++){
            if(isEqual(str1, str2)) return true;

            str2[s2.charAt(i) - 'a']--;
            str2[s2.charAt(i + n) - 'a']++;
        }
        return isEqual(str1, str2);
    }

    public boolean isEqual(int[] str1, int[] str2){
        for(int i = 0;i<26;i++)
            if(str1[i] != str2[i])
                return false;
        
        return true;
    }
}
