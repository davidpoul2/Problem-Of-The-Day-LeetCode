1590.  Make Sum Divisible by P.

class Solution {
    public int minSubarray(int[] nums, int p) {
        
        HashMap<Long, Integer> map = new HashMap<>();
        map.put(0L, -1);

        long sum = 0L;
        for(int num : nums) sum += num;
        
        long target = sum%p;
        if(target == 0) return 0;

        // Look at editorial for better understanding.
        long currSum = 0;
        int minLen = nums.length;
        for(int i = 0;i<nums.length;i++){
            currSum = (currSum + nums[i])%p;
            long complement = (currSum - target + p)%p;
            if(map.containsKey(complement)){
                minLen = (int)Math.min(minLen, i-map.get(complement));
            }
            map.put(currSum, i);
        }
        return minLen == nums.length ? -1: minLen;
    }
}
