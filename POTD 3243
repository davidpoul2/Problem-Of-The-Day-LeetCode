3243.  Shortest Distance After Road Addition Queries I.

class Solution {
    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {
        
        ArrayList<Integer> adj[] = new ArrayList[n-1];
        for(int i = 0;i < n-1;i++)
            adj[i] = new ArrayList<>(Arrays.asList(i+1));
        
        int m = queries.length;
        int dis[] = new int[m];
        int index = 0;
        for(int[] query : queries){
            adj[query[0]].add(query[1]);
            dis[index++] = findMinDis(adj, n);
        }
        //System.out.println(Arrays.toString(adj));
        return dis;
    }

    public int findMinDis(ArrayList<Integer> adj[], int n){
        
        int dis = 1;
        Queue<Integer> queue = new LinkedList<>();
        queue.add(0);
        boolean vis[] = new boolean[n];
        vis[0] = true;

        while(!queue.isEmpty()){

            int size = queue.size();
            for(int j = 0;j < size;j++){
                 var curr = queue.poll();

                for(int i = 0;i< adj[curr].size();i++){
                    int neigh = adj[curr].get(i);
                    if(neigh == n-1)    return dis;
                    if(!vis[neigh])
                        queue.add(neigh);
                    vis[neigh] = true;
                }
            }
           
            dis++;
        }
        return dis;
    }
}
