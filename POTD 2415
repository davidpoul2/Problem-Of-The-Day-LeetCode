2415.  Reverse Odd Levels of Binary Tree.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode reverseOddLevels(TreeNode root) {
        
        if(root == null || (root.left == null)) return root;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int lvl = 0;

        while(!queue.isEmpty()){
            int size = queue.size();
            TreeNode level[] = new TreeNode[size];
            for(int i = 0;i < size;i++){
                var curr = queue.poll();
                level[i] = curr;
                if(curr.left != null){
                    queue.offer(curr.left);
                    queue.offer(curr.right);
                }
            }
            if(lvl%2 != 0){
                for(int i = 0;i < size/2;i++){
                    int temp = level[i].val;
                    level[i].val = level[size-i-1].val;
                    level[size-i-1].val = temp;
                }
            }
            lvl++;
        }

        return root;
    }
}
