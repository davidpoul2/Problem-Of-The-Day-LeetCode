409. Longest Palindrome.

class Solution {
    public int longestPalindrome(String s) {
        int res = 0;

        //Approch 1
        // HashMap<Character, Integer> map = new HashMap<>();
        // for(int i = 0;i<s.length();i++){
        //     map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
        //     if(map.get(s.charAt(i))%2 == 0) res += 2;
        // }
        // for(Map.Entry<Character, Integer> m : map.entrySet()){
        //     if(m.getValue()%2 != 0){
        //         res += 1;
        //         break;
        //     }
        // }

        // return res;

        //Approch 2.
        // boolean flag = false;
        // for(Map.Entry<Character, Integer> m : map.entrySet()){
        //     if(m.getValue()%2 != 0){
        //         flag = true;
        //         if(m.getValue() != 1) res += m.getValue()-1;
        //     }
        //     else res += m.getValue();
        // }
        // return (flag)?res + 1:res;

        //Approch 3
        Set<Character> set = new HashSet<>();
        for(int i = 0;i<s.length();i++){
            if(set.contains(s.charAt(i))){
                res  += 2;
                set.remove(s.charAt(i));
            }
            else set.add(s.charAt(i));
        }
        if(!set.isEmpty()) res += 1;
        return res;
        
    }
}
