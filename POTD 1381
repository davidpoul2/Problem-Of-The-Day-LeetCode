1381.  Design a Stack With Increment Operation.

class Node{
    int val;
    Node next;
    Node prev;
    public Node(int _val){
        this.val = _val;
    }
}

class CustomStack {

    Node head;
    Node curr;
    int maxSize;

    public CustomStack(int maxSize) {
        head = new Node(-1);
        curr = head;
        this.maxSize = maxSize;
    }
    
    public void push(int x) {
        if(maxSize <= 0)    return;
        Node newNode = new Node(x);
        curr.next = newNode;
        newNode.prev = curr;
        curr = curr.next;
        maxSize--;
    }
    
    public int pop() {
        if(curr.val == -1)  return -1;
        int value = curr.val;
        curr = curr.prev;
        curr.next = null;
        maxSize++;
        return value;
    }
    
    public void increment(int k, int val) {
        Node temp = head;
        temp = temp.next;
        while(temp != null && k != 0){
            temp.val += val;
            k--;
            temp = temp.next;
        }
    }
}

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack obj = new CustomStack(maxSize);
 * obj.push(x);
 * int param_2 = obj.pop();
 * obj.increment(k,val);
 */
