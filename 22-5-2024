131. Palindrome Partitioning

class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<>();

        palindrome(s,0,new ArrayList<String>(),res);
        return res;
    }

    private void palindrome(String s, int index, List<String> list, List<List<String>> res){
        if(index >= s.length()){
            res.add(new ArrayList<>(list));
        }
        for(int i = index+1;i<=s.length();i++){
            if(isPalindrome(s.substring(index,i))){
                list.add(s.substring(index,i));
                palindrome(s,i,list,res);
                list.remove(list.size()-1);
            }
            
        }
        
    }

    private boolean isPalindrome(String str){
        int i = 0;
        int j = str.length()-1;
        while( i < j){
            if(str.charAt(i++) != str.charAt(j--))  return false;
        }
        return true;
    }
}
