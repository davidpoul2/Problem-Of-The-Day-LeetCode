2326.  Spiral Matrix IV

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[][] spiralMatrix(int m, int n, ListNode head) {
        

        ListNode curr = head;

        int[][] mat = new int[m][n];
        for(int i= 0;i<m;i++){
            Arrays.fill(mat[i], -1);
        }

        int left = 0;
        int top = 0;
        int right = n-1;
        int bottom = m-1;

        while(left <= right && top <= bottom){

            for(int i = left;i<=right;i++){
                if(head != null){
                    mat[top][i] = head.val;
                    head = head.next;
                }    
                else    return mat;
            }
            top++;

            for(int i = top;i<=bottom;i++){
                if(head != null){
                    mat[i][right] = head.val;
                    head = head.next;
                }    
                else    return mat;
            }
            right--;

            for(int i = right;i>=left && top <= bottom;i--){
                if(head != null){
                    mat[bottom][i] = head.val;
                    head = head.next;
                }    
                else    return mat;
            }
            bottom--;

            for(int i = bottom;i>= top && left <= right;i--){
                if(head != null){
                    mat[i][left] = head.val;
                    head = head.next;
                }    
                else    return mat;
            }
            left++;
        }

        return mat;
    }
}
