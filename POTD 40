40.  Combination Sum 11

class Solution {

    private void sum2(int index, int[] arr, int sum, List<List<Integer>> res, List<Integer> list){
        if(sum == 0)    res.add(new ArrayList<Integer>(list));
        for(int i = index;i<arr.length;i++){
            if(sum < arr[i])    break;
            if(i != index && arr[i] == arr[i-1])    continue;
            list.add(arr[i]);
            sum -= arr[i];
            sum2(i+1, arr, sum, res,list);
            sum += arr[i];
            list.remove(list.size()-1);
        }
    }

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res  = new ArrayList<>();
        Arrays.sort(candidates);
        sum2(0, candidates, target, res, new ArrayList<>());
        return res;
    }
}
